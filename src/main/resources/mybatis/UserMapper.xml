<mapper namespace="com.example.wms.infrastructure.mapper.UserMapper">
    <!-- 회원가입 -->
    <insert id="save" parameterType="com.example.wms.user.application.domain.User">
        INSERT INTO users (staff_number, password, name, phone, gender, birth_date, supplier_id, user_role)
        VALUES (#{staffNumber}, #{password}, #{name}, #{phone}, #{gender}, #{birthDate}, #{supplierId}, #{userRole})
    </insert>

    <!-- 직원 번호로 사용자 조회 -->
    <select id="findByStaffNumber" parameterType="String" resultType="com.example.wms.user.application.domain.User">
        SELECT * FROM users WHERE staff_number = #{staffNumber}
    </select>

    <!-- 직원 번호로 이미 존재하는지 체크 -->
    <select id="existsByStaffNumber" parameterType="String" resultType="boolean">
        SELECT COUNT(*) > 0 FROM users WHERE staff_number = #{staffNumber}
    </select>

    <!-- 직원 번호로 사용자 삭제 -->
    <delete id="deleteByStaffNumber" parameterType="String">
        DELETE FROM users WHERE staff_number = #{staffNumber}
    </delete>

    <!-- 사용자 정보 업데이트 -->
    <update id="updateUser" parameterType="com.example.wms.user.application.domain.User">
        UPDATE users
        SET
        password = #{password},
        name = #{name},
        phone = #{phone},
        gender = #{gender},
        birth_date = #{birthDate},
        supplier_id = #{supplierId},
        user_role = #{userRole}
        WHERE staff_number = #{staffNumber}
    </update>

    <!-- 사용자 ID로 조회 -->
    <select id="findById" resultType="com.example.wms.user.application.domain.User">
        SELECT * FROM users WHERE id = #{userId} LIMIT 1
    </select>

    <!-- 사용자 ID로 존재 여부 체크 -->
    <select id="existsById" resultType="boolean">
        SELECT COUNT(*) > 0 FROM users WHERE id = #{userId}
    </select>

    <!-- 모든 사용자 조회 -->
    <select id="findAll" resultType="com.example.wms.user.application.domain.User">
        SELECT * FROM users
    </select>
</mapper>
