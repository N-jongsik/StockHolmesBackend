<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.wms.infrastructure.mapper.InventoryMapper">
    <select id="findAllProductInventories" resultType="com.example.wms.outbound.adapter.in.dto.ProductInfoDto">
        SELECT
        p.product_id,
        p.product_code,
        p.product_name,
        i.available_quantity AS product_count
        FROM product p
        JOIN inventory i ON p.product_id = i.product_id
        <if test="productCode != null and productCode != ''">
            WHERE p.product_code LIKE CONCAT('%', #{productCode}, '%')
        </if>
        <if test="pageable.sort.sorted">
            <trim prefix="ORDER BY">
                <foreach item="order" index="i" collection="pageable.sort" separator=", ">
                    ${order.property}
                    <choose>
                        <when test="order.direction.toString() == 'ASC'"> ASC</when>
                        <otherwise> DESC</otherwise>
                    </choose>
                </foreach>
            </trim>
        </if>
        LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}
    </select>

    <select id="countAllProductInventories" resultType="long">
        SELECT count(*) FROM product p JOIN inventory i ON p.product_id = i.product_id
        <if test="productCode != null and productCode != ''">
            WHERE p.product_code LIKE CONCAT('%', #{productCode}, '%')
        </if>
    </select>

    <select id="findAllProductThresholds" resultType="com.example.wms.inventory.adapter.in.dto.ProductThresholdDto">
        SELECT
        p.product_id,
        p.product_code,
        p.product_name,
        i.available_quantity,
        (p.lot_unit * p.stock_lot_count) as product_count,
        p.threshold
        FROM product p
        JOIN inventory i ON p.product_id = i.product_id
        <if test="productCode != null and productCode != ''">
            WHERE p.product_code LIKE CONCAT('%', #{productCode}, '%')
        </if>
        <if test="pageable.sort.sorted">
            <trim prefix="ORDER BY">
                <foreach item="order" index="i" collection="pageable.sort" separator=", ">
                    ${order.property}
                    <choose>
                        <when test="order.direction.toString() == 'ASC'"> ASC</when>
                        <otherwise> DESC</otherwise>
                    </choose>
                </foreach>
            </trim>
        </if>
        LIMIT #{pageable.pageSize} OFFSET #{pageable.offset}
    </select>

    <update id="updateInventory">
        UPDATE inventory
        SET available_quantity = available_quantity + #{lotCount},
            last_updated = NOW()
        WHERE product_id = #{productId}
    </update>

    <update id="updateInventoryQuantity">
        UPDATE inventory
        SET available_quantity = #{availableQuantity}
        WHERE product_id = #{productId}
    </update>

    <update id="updateThreshold">
        UPDATE product
        SET threshold = #{threshold}
        WHERE product_id = #{productId}
    </update>

    <select id="findByProductId" resultType="com.example.wms.product.application.domain.Product">
        SELECT *
        FROM product
        WHERE product_id = #{productId}
    </select>

    <select id="findAvailableQuantity" resultType="Integer">
        SELECT available_quantity
        FROM inventory
        WHERE product_id =#{productId}
    </select>
</mapper>

