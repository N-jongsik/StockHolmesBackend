# HTTP to HTTPS 리다이렉트
server {
    listen 80;
    server_name stockholmes.store api.stockholmes.store;
    return 301 https://$server_name$request_uri;
}

# Frontend Server
server {
    listen 443 ssl http2;
    server_name stockholmes.store;

    ssl_certificate /etc/letsencrypt/live/stockholmes.store/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/stockholmes.store/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;

    root /home/ec2-user/frontend/dist;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }
}

# Backend API Server
server {
    listen 443 ssl http2;
    server_name api.stockholmes.store;

    ssl_certificate /etc/letsencrypt/live/api.stockholmes.store/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.stockholmes.store/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;

    # API endpoints
    location /api {
        proxy_pass http://$target_upstream;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # CORS 설정
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://stockholmes.store';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Max-Age' 86400;
            return 204;
        }

        add_header 'Access-Control-Allow-Origin' 'https://stockholmes.store' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # Health check endpoint
    location /health {
        access_log off;
        proxy_pass http://$target_upstream/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
}